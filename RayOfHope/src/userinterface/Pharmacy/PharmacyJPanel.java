/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.Pharmacy;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.Organizations.PharmacistOrganization;
import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.WorkQueue.PharmacistAssistWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author parag
 */
public class PharmacyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmacyJPanel
     */
    
    private JPanel userProcessContainer;
    private PharmacistOrganization pharmacyOrganization;
    private Enterprise enterprise;
    private EcoSystem business;
    private UserAccount userAccount;
    private PersonDirectory personDirectory;
    private Person person;
    Network network;
    
    public PharmacyJPanel(JPanel userProcessContainer, UserAccount account, PharmacistOrganization pharmacyOrganization, Enterprise enterprise, EcoSystem business, PersonDirectory personDirectory) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.pharmacyOrganization = (PharmacistOrganization) pharmacyOrganization;
        this.enterprise = enterprise;
        this.business = business;
        this.personDirectory = personDirectory;
        
        for (Network n : business.getNetworkCatalog()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e.equals(enterprise)) {
                    network = n;
                }
            }
        }
        btnProcess.setEnabled(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPharmacist = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPharmacist = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(246, 226, 187));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 153, 255)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPharmacist.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        lblPharmacist.setForeground(new java.awt.Color(71, 52, 58));
        lblPharmacist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPharmacist.setText("Pharmacy");
        jPanel1.add(lblPharmacist, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 450, -1));

        tblPharmacist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Patient's ID", "Patients Name", "Doctor", "Prescription", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPharmacist);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 850, 150));

        btnAssignToMe.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnAssignToMe.setText("Assign To Me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });
        jPanel1.add(btnAssignToMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 170, 30));

        btnProcess.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        jPanel1.add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 140, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pw1-gif1_-_dribbble.gif"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 860, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPharmacist.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a person from table to assign");
            return;
        }
        WorkRequest request = (WorkRequest) tblPharmacist.getValueAt(selectedRow, 0);
            if ("Delivered".equalsIgnoreCase(request.getStatus())) {
                JOptionPane.showMessageDialog(null, "Request already completed.");
                return;
            } else {
                request.setReceiver(userAccount);
                request.setStatus("Pending");
                btnProcess.setEnabled(true);
            }
            populateTable();
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPharmacist.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a person from table before proceeding");
            return;
        }
        PharmacistAssistWorkRequest request = (PharmacistAssistWorkRequest) tblPharmacist.getValueAt(selectedRow, 0);
            if ("Delivered".equalsIgnoreCase(request.getStatus())) {
                JOptionPane.showMessageDialog(null, "Request already completed.");
                return;
            } else {
                request.setStatus("Processing");
            }
            PharmacyProcessJPanel processWorkRequestJPanel = new PharmacyProcessJPanel(userProcessContainer, request, userAccount, enterprise, person, personDirectory, business, pharmacyOrganization);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
    }//GEN-LAST:event_btnProcessActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPharmacist;
    private javax.swing.JTable tblPharmacist;
    // End of variables declaration//GEN-END:variables
        
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblPharmacist.getModel();
        model.setRowCount(0);
        for (WorkRequest request : pharmacyOrganization.getWorkQueue().getWorkRequestList()) {
            if(request instanceof PharmacistAssistWorkRequest){
            PharmacistAssistWorkRequest pharrequest =(PharmacistAssistWorkRequest)request;
            Object[] row = new Object[model.getColumnCount()];
            row[0] = request;
            row[1] = request.getPersonId();
            row[2] = request.getPersonName();
            row[3] = request.getSender().getEmployee().getName();
            row[4] = pharrequest.getPrescription();
            row[5] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[6] = request.getStatus();
            model.addRow(row);
            }
        }
    }    
}
